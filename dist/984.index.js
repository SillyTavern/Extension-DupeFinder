(()=>{var e={834:(e,n,t)=>{var r=t(52);e.exports=function(e,n){var t,o=r.create(e,(function(e,t){var r=n(e,t);if("number"!=typeof r||r<0)throw new Error("Similarity function did not yield a number in the range [0, +Inf) when comparing "+e+" to "+t+" : "+r);return r}));function i(e){return function(){return e.apply(this,Array.prototype.slice.call(arguments)).map((function(e){return e.nodes.map(r.data)}))}}function d(e,n){var t=n||1e3;return r.divide(o,e,t)}function a(e,n){var t=d(e,n);return t.sort((function(e,n){return n.nodes.length-e.nodes.length})),t.splice(e),t.map(r.findCenter)}return{groups:i(d),representatives:(t=a,function(){return t.apply(this,Array.prototype.slice.call(arguments)).map(r.data)}),similarGroups:i((function(e){return r.connected(o,e)})),evenGroups:function(e,n){for(var t=a(e),i=r.growFromNuclei(o,t),d=i.graphs.map((function(e){return e.nodes.map(r.data)}));i.orphans.length;){var s=r.data(i.orphans.pop());d.sort((function(e,n){return e.length-n.length})),d[0].push(s)}return d}}}},52:e=>{function n(e,n){var t=e.nodes.slice(),r=[];if(!t.length)return r;for(var o=[],i=null;t.length;)for(o.length||(i&&r.push(i),i={nodes:(o=[t.pop()]).slice(),edges:{}});o.length;)for(var d=o.pop(),a=t.length-1;a>=0;a--){var s=t[a];if(e.edges[d.id]&&e.edges[d.id][s.id]>=n){o.push(s),i.nodes.push(s),i.edges[d.id]=i.edges[d.id]||{},i.edges[d.id][s.id]=e.edges[d.id][s.id],i.edges[s.id]=i.edges[s.id]||{},i.edges[s.id][d.id]=e.edges[s.id][d.id];var c=t.slice(0,a).concat(t.slice(a+1));t=c}}return i&&r.push(i),r}e.exports={create:function(e,n){var t={},r=1,o=e.map((function(e){return{id:r++,data:e}}));return o.forEach((function(e){t[e.id]=t[e.id]||{},o.forEach((function(r){if(e!==r){var o=n(e.data,r.data);t[e.id][r.id]=o,t[r.id]=t[r.id]||{},t[r.id][e.id]=o}}))})),{nodes:o,edges:t}},data:function(e){return e.data},connected:n,divide:function(e,t,r){for(var o=1/0,i=0,d=function(e){var n=0;return e.nodes.forEach((function(t){e.nodes.forEach((function(r){var o=e.edges[t.id][r.id];o&&o>n&&(n=o)}))})),n}(e)+1,a=null,s=-2;s<r;s++){var c,u=n(e,c=-2==s?i:-1==s?d:(d+i)/2),f=u.length-t;if(f<o&&f>=0&&(o=f,a=u),u.length>t&&(d=c),u.length<t&&(i=c),u.length==t)break;if(i==d)break}return a},findCenter:function(e){var n=function(e){var n={};return e.nodes.forEach((function(e){n[e.id]={},n[e.id][e.id]=0})),e.nodes.forEach((function(t){e.nodes.forEach((function(r){if(t!=r){var o=e.edges[t.id]&&e.edges[t.id][r.id];null==o&&(o=1/0),n[t.id][r.id]=o}}))})),e.nodes.forEach((function(t){e.nodes.forEach((function(r){e.nodes.forEach((function(e){var o=n[r.id][t.id]+n[t.id][e.id];n[r.id][e.id]>o&&(n[r.id][e.id]=o)}))}))})),n}(e),t=1/0,r=null;return e.nodes.forEach((function(o){var i=0;e.nodes.forEach((function(e){var t=n[o.id][e.id];t>i&&(i=t)})),t>i&&(t=i,r=o)})),r},growFromNuclei:function(e,n){for(var t=n.map((function(e){return{nodes:[e],edges:{}}})),r=e.nodes.filter((function(e){return 0==n.filter((function(n){return e==n})).length})),o=0,i=t.length;r.length&&i;){i-=1;var d=t[o];o=(o+1)%t.length;var a=null,s=null,c=-1/0;if(d.nodes.forEach((function(n){r.forEach((function(t){var r=e.edges[n.id]&&e.edges[n.id][t.id];r&&r>c&&(a=n,s=t,c=r)}))})),a){var u=a,f=s;d.edges[u.id]=d.edges[u.id]||{},d.edges[u.id][f.id]=e.edges[u.id][f.id],d.edges[f.id]=d.edges[f.id]||{},d.edges[f.id][u.id]=e.edges[f.id][u.id],d.nodes.push(s),r=r.filter((function(e){return e!=s})),i=t.length}}return{graphs:t,orphans:r}}}}},n={};function t(r){var o=n[r];if(void 0!==o)return o.exports;var i=n[r]={exports:{}};return e[r](i,i.exports,t),i.exports}t.n=e=>{var n=e&&e.__esModule?()=>e.default:()=>e;return t.d(n,{a:n}),n},t.d=(e,n)=>{for(var r in n)t.o(n,r)&&!t.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:n[r]})},t.o=(e,n)=>Object.prototype.hasOwnProperty.call(e,n),(()=>{"use strict";const e=new Uint32Array(65536),n=(n,t)=>{if(n.length<t.length){const e=t;t=n,n=e}return 0===t.length?n.length:n.length<=32?((n,t)=>{const r=n.length,o=t.length,i=1<<r-1;let d=-1,a=0,s=r,c=r;for(;c--;)e[n.charCodeAt(c)]|=1<<c;for(c=0;c<o;c++){let n=e[t.charCodeAt(c)];const r=n|a;n|=(n&d)+d^d,a|=~(n|d),d&=n,a&i&&s++,d&i&&s--,a=a<<1|1,d=d<<1|~(r|a),a&=r}for(c=r;c--;)e[n.charCodeAt(c)]=0;return s})(n,t):((n,t)=>{const r=t.length,o=n.length,i=[],d=[],a=Math.ceil(r/32),s=Math.ceil(o/32);for(let e=0;e<a;e++)d[e]=-1,i[e]=0;let c=0;for(;c<s-1;c++){let a=0,s=-1;const u=32*c,f=Math.min(32,o)+u;for(let t=u;t<f;t++)e[n.charCodeAt(t)]|=1<<t;for(let n=0;n<r;n++){const r=e[t.charCodeAt(n)],o=d[n/32|0]>>>n&1,c=i[n/32|0]>>>n&1,u=r|a,f=((r|c)&s)+s^s|r|c;let l=a|~(f|s),h=s&f;l>>>31^o&&(d[n/32|0]^=1<<n),h>>>31^c&&(i[n/32|0]^=1<<n),l=l<<1|o,h=h<<1|c,s=h|~(u|l),a=l&u}for(let t=u;t<f;t++)e[n.charCodeAt(t)]=0}let u=0,f=-1;const l=32*c,h=Math.min(32,o-l)+l;for(let t=l;t<h;t++)e[n.charCodeAt(t)]|=1<<t;let g=o;for(let n=0;n<r;n++){const r=e[t.charCodeAt(n)],a=d[n/32|0]>>>n&1,s=i[n/32|0]>>>n&1,c=r|u,l=((r|s)&f)+f^f|r|s;let h=u|~(l|f),p=f&l;g+=h>>>o-1&1,g-=p>>>o-1&1,h>>>31^a&&(d[n/32|0]^=1<<n),p>>>31^s&&(i[n/32|0]^=1<<n),h=h<<1|a,p=p<<1|s,f=p|~(c|h),u=h&c}for(let t=l;t<h;t++)e[n.charCodeAt(t)]=0;return g})(n,t)};var r=t(834),o=t.n(r);let i=new Set;const d=(e=>{const n=new Map;return(t,r)=>{const o=r;if(n.has(o))return n.get(o);const i=e(t,r);return n.set(o,i),i}})(((e,n)=>e.split(/\.|\?|!/).map((e=>e.trim())).filter((e=>e.length>0)))),a=(e,n,t)=>"".concat(e,"-").concat(n,"-").concat(t);function s(e,n){let t=0,r=0;for(const o of i){const i=e.data[o]||"",s=n.data[o]||"";if(""===i||""===s)continue;const c=a(e.data.name,i,e.date_added),u=a(n.data.name,s,n.date_added),f=new Set(d(i,c)),l=new Set(d(s,u)),h=new Set([...f].filter((e=>l.has(e)))),g=new Set([...f,...l]);if(g.size>0){t+=h.size/g.size,r++}}return 0===r?0:t/r}function c(e,t){let r=0,o=0;for(const d of i){const i=e.data[d]||"",a=t.data[d]||"";if(""===i||""===a)continue;r+=1-n(i,a)/Math.max(i.length,a.length),o++}return 0===o?0:r/o}self.onmessage=function(e){let{data:{threshold:n,characters:t,method:r,fields:d}}=e;const a=t.length*(t.length-1),u=function(e){return"sentence"===e?s:c}(r);i=new Set(d);let f=0,l=0;const h=o()(t,((e,n)=>{const t=Math.round(f++/a*100);return t!==l&&(l=t,self.postMessage({type:"progress",data:{percent:t,run:f,totalRuns:a}})),u(e,n)})).similarGroups(n);self.postMessage({type:"result",data:h})}})()})();